FROM ubuntu:16.04

MAINTAINER Adrian Skierniewski <adrian.skierniewski@gmail.com>

# Set correct environment variables
ENV HOME /root
ENV TERM xterm
ENV DEBIAN_FRONTEND noninteractive
ENV COMPOSER_ALLOW_SUPERUSER 1
ENV GOSU_VERSION 1.10

RUN apt-get update && \
    apt-get install -y software-properties-common wget --no-install-recommends && \
    LANG=C.UTF-8 add-apt-repository ppa:ondrej/php && \
    apt-get update && \
    apt-get install -y \
      nano \
      htop \
      git \
      cron \
      gettext \
      curl \
      mysql-client \
      php7.2-cli \
      php7.2-common \
      php7.2-curl \
      php7.2-gd \
      php7.2-intl \
      php7.2-json \
      php7.2-ldap \
      php7.2-mbstring \
      php7.2-mysql \
      php7.2-pgsql \
      php7.2-opcache \
      php7.2-xdebug \
      php7.2-xml \
      php7.2-redis \
      php7.2-zip \
      && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)" \
      && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc" \
      && export GNUPGHOME="$(mktemp -d)" \
      && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \
      && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \
      && rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc \
      && chmod +x /usr/local/bin/gosu \
      && gosu nobody true \
    apt-get remove --purge -y software-properties-common ca-certificates wget && \
    apt-get autoremove -y && \
    apt-get clean && \
    apt-get autoclean && \
    echo -n > /var/lib/apt/extended_states && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /etc/cron.d/* && \
    rm -rf /etc/cron.hourly/* && \
    rm -rf /etc/cron.daily/* && \
    rm -rf /etc/cron.monthly/* && \
    rm -rf /usr/share/man/?? && \
    rm -rf /usr/share/man/??_*

# PHP-CLI configs
ADD ./cfg/php-cli.ini /etc/php/7.2/cli/php.ini
ADD ./cfg/xdebug.ini ./etc/php/7.2/mods-available/xdebug.ini

# Start script
ADD ./docker-entrypoint-worker.sh /usr/local/bin/docker-entrypoint.sh

# Add cron file
ADD ./cfg/laravel-cron /var/laravel-cron

RUN chmod 0644 /var/laravel-cron \
  && crontab -u www-data /var/laravel-cron \
  && /usr/bin/curl -sS https://getcomposer.org/installer | /usr/bin/php \
  && /bin/mv composer.phar /usr/local/bin/composer \
  && chmod +x /usr/local/bin/docker-entrypoint.sh

HEALTHCHECK --interval=5s --timeout=3s \
  CMD php artisan horizon:list | grep -v 'No machines are running.'

WORKDIR /var/www

ENTRYPOINT ["docker-entrypoint.sh"]

CMD ["php", "/var/www/artisan", "horizon"]
